{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Mage",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.mage",
          "match": "\\b(scry|morph|lest|chant|from|to|step|recite|channel|enchant|cast|conjure|incant)\\b"
        },
        {
          "name": "keyword.operator.logical.mage",
          "match": "\\b(and|or|not)\\b"
        },
        {
          "name": "constant.language.boolean.mage",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.language.null.mage",
          "match": "\\b(null|nil)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.mage",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.mage",
              "match": "\\\\."
            },
            {
              "name": "variable.other.placeholder.mage",
              "match": "\\$\\{[^}]+\\}|\\$[a-zA-Z_][a-zA-Z0-9_]*"
            }
          ]
        },
        {
          "name": "string.quoted.single.mage",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.mage",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.mage",
          "match": "#.*$"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.mage",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        {
          "name": "constant.numeric.hex.mage",
          "match": "\\b0x[0-9a-fA-F]+\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.builtin.mage",
          "match": "\\b(platform|architecture|home_directory|get_current_directory|file_exists|directory_exists|write_file|read_file|delete_file|copy_file|move_file|ensure_directory|delete_directory|make_executable|get_env|set_env|package_init|package_add|package_remove|package_list|package_install|package_info|detect_package_managers|get_primary_package_manager|package_manager_available|install_package|package_installed|search_package|to_lowercase|to_uppercase|add|subtract|multiply|divide)\\b"
        },
        {
          "name": "entity.name.function.mage",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.mage",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.mage",
          "match": "\\+|-|\\*|/|%"
        },
        {
          "name": "keyword.operator.comparison.mage",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.assignment.mage",
          "match": "="
        }
      ]
    }
  },
  "scopeName": "source.mage"
} 